shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <- read.csv('data/marketing_campaign.csv', stringsAsFactors = F,head = T, row.names = 1)
print(data)
View(data)
View(data)
data <- read.csv('data/marketing_campaign.csv')
data <- read.csv('data/marketing_campaign.csv', sep='\t')
shiny::runApp('dashboard_projet')
launch_editor(app_loc = "dashboard_projet/")
library(shinyuieditor)
launch_editor(app_loc = "dashboard_projet/")
a <- ggplot(data = data, mapping = aes(x = "Income", y = "MntWines",
color = "Marital_Status")) +
geom_point() +
labs(x = "Income ($)",
y = "Money spent on wines ($)",
title = "Example 1")
a
a <- ggplot(data = data, mapping = aes(x = Income, y = MntWines,
color = Marital_Status)) +
geom_point() +
labs(x = "Income ($)",
y = "Money spent on wines ($)",
title = "Example 1")
a
launch_editor(app_loc = "dashboard_projet/")
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
data(mtcars, package="datasets")
force(mtcars)
ggplot(mpg, aes(cty, hwy)) +
geom_point(aes(shape = trans2)) +
theme_bw(color=cyl) +
facet_wrap("class")
ggplot(mpg, aes(cty, hwy)) +geom_point(aes(shape = trans2)) +theme_bw(color=cyl) +facet_wrap("class")
library(ggplot2)
ggplot(mpg, aes(cty, hwy)) +geom_point(aes(shape = trans2)) +theme_bw(color=cyl) +facet_wrap("class")
ggplot(mpg, aes(cty, hwy)) + geom_point(aes(shape = trans2)) + theme_bw(color=cyl) + facet_wrap("class")
ggplot(mpg, aes(cty, hwy)) + geom_point(aes(shape = trans2)) + facet_wrap("class")
ggplot(mpg, aes(cty, hwy, color=cyl)) +
geom_point() +
theme_bw() +
facet_wrap("class")
ggplot(mpg, aes(cty, hwy, color=cyl)) +
geom_point(aes(shape = trans2)) +
theme_bw() +
facet_wrap("class")
ggplot(mpg, aes(cty, hwy, color=cyl)) +
geom_point() +
theme_bw() +
facet_wrap("class")
library(plotly)
library(shiny)
library(gridlayout)
library(ggplot2)
library(dplyr)
library(DT)
library(tidyverse)
runApp('dashboard_projet')
runApp('C:/Users/Mathieu/Desktop/Visu donnÃ©es/Exemples/3 - Apps/movies_11.R')
runApp('dashboard_projet')
runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
library(shinyuieditor)
launch_editor(app_loc = "dashboard_projet/")
library(shinyuieditor)
launch_editor(app_loc = "dashboard_projet/")
library(shinyuieditor)
launch_editor(app_loc = "dashboard_projet/")
launch_editor(app_loc = "dashboard_projet/app.r")
launch_editor(app_loc = "dashboard_projet/")
launch_editor(app_loc = "dashboard_projet/")
launch_editor(app_loc = "/")
launch_editor(app_loc = "app.r")
launch_editor(app_loc = "dashboard_projet/")
shinyuieditor::launch_editor(app_loc = "dashboard_projet/")
getwd()
shinyuieditor::launch_editor(app_loc = "/")
shinyuieditor::launch_editor(app_loc = "")
shinyuieditor::launch_editor(app_loc = "")
dashboard_projet
shinyuieditor::launch_editor(app_loc = "dashboard_projet/")
library(shinyuieditor)
shinyuieditor::launch_editor(app_loc = "dashboard_projet/")
library(shinyuieditor)
shinyuieditor::launch_editor(app_loc = "dashboard_projet/")
library(shinyuieditor)
shinyuieditor::launch_editor(app_loc = "dashboard_projet/")
library(shinyuieditor)
shinyuieditor::launch_editor(app_loc = "/")
library(shinyuieditor)
shinyuieditor::launch_editor(app_loc = "test/")
runApp('dashboard_projet')
getwd()
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp()
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
install.packages("colourpicker")
colourpicker:::plotHelperAddin()
colourpicker:::plotHelperAddin()
runApp('dashboard_projet')
colourpicker:::colourPickerAddin()
colourpicker:::plotHelperAddin()
data <- read.csv('data/marketing_campaign.csv', sep='\t')
colourpicker:::plotHelperAddin()
colourpicker:::plotHelperAddin()
campaign_data <- read.csv('data/marketing_campaign.csv', sep='\t')
campaign_data <- read.csv('data/marketing_campaign.csv', sep='\t')
library(readr)
campaign_data <- read_delim("dashboard_projet/data/marketing_campaign.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(campaign_data)
colourpicker:::plotHelperAddin()
campaign_data['Age'] <- 2022 - campaign_data['Year_Birth']
campaign_data <- campaign_data %>%
mutate(Age_Category = case_when(
Age <= 14 ~ 'Children',
Age <= 24 ~ 'Youth',
Age <= 64 ~ 'Adult',
Age >= 65 ~ 'Senior',
))
campaign_data["Marital_Status"][campaign_data["Marital_Status"] == "Alone"] <- "Single"
campaign_data <- campaign_data[!(campaign_data$Marital_Status %in% c("YOLO", "Absurd")), ]
age_category_list <- unique(campaign_data$Age_Category)
education_list <- unique(campaign_data$Education)
marital_status_list <- unique(campaign_data$Marital_Status)
colourpicker:::plotHelperAddin()
runApp('dashboard_projet')
runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
library(readr)
campaign_data <- read_delim("dashboard_projet/data/marketing_campaign.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(campaign_data)
runApp('dashboard_projet')
colourpicker:::plotHelperAddin()
campaign_data <- campaign_data %>%
mutate(Age_Category = case_when(
Age <= 14 ~ 'Children',
Age <= 24 ~ 'Youth',
Age <= 64 ~ 'Adult',
Age >= 65 ~ 'Senior',
))
campaign_data <- campaign_data %>%
mutate(Age_Category = case_when(
Age <= 14 ~ 'Children',
Age <= 24 ~ 'Youth',
Age <= 64 ~ 'Adult',
Age >= 65 ~ 'Senior',
))
campaign_data['Age'] <- 2022 - campaign_data['Year_Birth']
campaign_data <- campaign_data %>%
mutate(Age_Category = case_when(
Age <= 14 ~ 'Children',
Age <= 24 ~ 'Youth',
Age <= 64 ~ 'Adult',
Age >= 65 ~ 'Senior',
))
# cleaning data
# Change Alone to single and remove YOLO and absurd
campaign_data["Marital_Status"][campaign_data["Marital_Status"] == "Alone"] <- "Single"
campaign_data <- campaign_data[!(campaign_data$Marital_Status %in% c("YOLO", "Absurd")), ]
age_category_list <- unique(campaign_data$Age_Category)
education_list <- unique(campaign_data$Education)
marital_status_list <- unique(campaign_data$Marital_Status)
product_data_percentage <- reactive({
product_data() %>%
mutate(MntCategory = factor(MntCategory)) %>%
group_by(MntCategory) %>%
summarise(total = sum(Amount)) %>%
mutate(proportion = total / sum(total)) %>%
arrange(desc(proportion)) %>%
mutate(proportion = round(proportion, 2))
})
product_data <- reactive({
amount_graph_filtered_data()[c("MntWines", "MntFruits", "MntMeatProducts", "MntFishProducts", "MntSweetProducts", "MntGoldProds")] %>%
pivot_longer(cols=c("MntWines", "MntFruits", "MntMeatProducts", "MntFishProducts", "MntSweetProducts", "MntGoldProds"),
names_to="MntCategory",
values_to="Amount")
})
colourpicker:::plotHelperAddin()
amount_graph_filtered_data = reactive({
req(input$selected_age) # ensure availablity of value before proceeding
req(input$selected_education)
req(input$selected_marital_status)
filter(campaign_data, Age_Category %in% input$selected_age) %>%
filter(Education %in% input$selected_education) %>%
filter(Marital_Status %in% input$selected_marital_status)
})
colourpicker:::plotHelperAddin()
amount_graph_filtered_data = reactive({
req(input$selected_age) # ensure availablity of value before proceeding
req(input$selected_education)
req(input$selected_marital_status)
filter(campaign_data, Age_Category %in% input$selected_age) %>%
filter(Education %in% input$selected_education) %>%
filter(Marital_Status %in% input$selected_marital_status)
})
amount_graph_filtered_data = reactive({
req(input$selected_age) # ensure availablity of value before proceeding
req(input$selected_education)
req(input$selected_marital_status)
filter(campaign_data, Age_Category %in% input$selected_age) %>%
filter(Education %in% input$selected_education) %>%
filter(Marital_Status %in% input$selected_marital_status)
})
colourpicker:::plotHelperAddin()
runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
devtools::install_github('Mikata-Project/ggthemr')
devtools::install_github('Mikata-Project/ggthemr')
runApp('dashboard_projet')
install.packages("devtools")
devtools::install_github('Mikata-Project/ggthemr')
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
devtools::install_github('Mikata-Project/ggthemr')
devtools::install_github('Mikata-Project/ggthemr')
install.packages("cli")
devtools::install_github('Mikata-Project/ggthemr')
shiny::runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
library(shinyuieditor)
shinyuieditor::launch_editor(app_loc = "test/")
runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('C:/Users/Mathieu/Desktop')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
library(readr)
marketing_campaign <- read_delim("dashboard_projet/data/marketing_campaign.csv",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(marketing_campaign)
runApp('dashboard_projet')
runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
shiny::runApp('dashboard_projet')
